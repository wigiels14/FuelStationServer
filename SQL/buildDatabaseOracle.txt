DROP TABLE TRANSACTION;
DROP TABLE TANK;
DROP TABLE MANAGER;
DROP TABLE EMPLOYEE;
DROP TABLE BRANCH;
DROP TABLE CUSTOMER_ACCOUNT;
DROP TABLE CUSTOMER;

CREATE TABLE CUSTOMER(
ID NUMERIC(10) NOT NULL PRIMARY KEY,
FIRST_NAME VARCHAR(30) NOT NULL,
LAST_NAME VARCHAR(30) NOT NULL,
PESEL VARCHAR(11) NOT NULL,
ID_NUMBER VARCHAR(9) NOT NULL
);

CREATE TABLE CUSTOMER_ACCOUNT (
ID NUMERIC(10) NOT NULL PRIMARY KEY,
BONUS_POINTS NUMERIC(10) NOT NULL,
CUSTOMER_ID NUMERIC(10) REFERENCES CUSTOMER(ID) NOT NULL
);

CREATE TABLE BRANCH (
ID NUMERIC(10) NOT NULL PRIMARY KEY,
CITY VARCHAR(50) NOT NULL
);

CREATE TABLE EMPLOYEE(
ID NUMERIC(10) NOT NULL PRIMARY KEY,
FIRST_NAME VARCHAR(30) NOT NULL,
LAST_NAME VARCHAR(30) NOT NULL,
PESEL VARCHAR(11) NOT NULL,
ID_NUMBER VARCHAR(9) NOT NULL,
PASSWORD VARCHAR(30) NOT NULL,
BRANCH_ID NUMERIC(10) REFERENCES BRANCH(ID) NOT NULL
);

CREATE TABLE MANAGER(
ID NUMERIC(10) NOT NULL PRIMARY KEY,
FIRST_NAME VARCHAR(30) NOT NULL,
LAST_NAME VARCHAR(30) NOT NULL,
PESEL VARCHAR(11) NOT NULL,
ID_NUMBER VARCHAR(9) NOT NULL,
PASSWORD VARCHAR(30) NOT NULL,
BRANCH_ID NUMERIC(10) REFERENCES BRANCH(ID) NOT NULL
);


CREATE TABLE TANK(
ID NUMERIC(10) NOT NULL PRIMARY KEY,
CAPACITY NUMERIC(35) NOT NULL,
FILLED_SPACE NUMERIC(35) NOT NULL,
BRANCH_ID NUMERIC(10) REFERENCES BRANCH(ID) NOT NULL
);


CREATE TABLE TRANSACTION(
ID NUMERIC(10) NOT NULL PRIMARY KEY,
CUSTMER_ACCOUNT_ID NUMERIC(10) REFERENCES CUSTOMER_ACCOUNT(ID) NOT NULL,
EMPLOYEE_ID NUMERIC(10) REFERENCES EMPLOYEE(ID) NOT NULL,
DATE DATE NOT NULL,
COST NUMERIC(30) NOT NULL,
ADDED_BONUS_POINTS NUMERIC(30) NOT NULL
);


DROP SEQUENCE transaction_sequence;
DROP SEQUENCE tank_sequence;
DROP SEQUENCE branch_sequence;
DROP SEQUENCE employee_sequence;
DROP SEQUENCE manager_sequence;
DROP SEQUENCE customer_sequence;
DROP SEQUENCE customer_account_sequence;

CREATE SEQUENCE transaction_sequence;
CREATE SEQUENCE tank_sequence;
CREATE SEQUENCE branch_sequence;
CREATE SEQUENCE employee_sequence;
CREATE SEQUENCE manager_sequence;
CREATE SEQUENCE customer_sequence;
CREATE SEQUENCE customer_account_sequence;

INSERT INTO BRANCH(ID, CITY)
VALUES(nextval('branch_sequence'), 'Kielce');

INSERT INTO MANAGER(ID, FIRST_NAME, LAST_NAME, PESEL, ID_NUMBER, PASSWORD, BRANCH_ID)
VALUES(nextval('manager_sequence'), 'Jakub', 'Kozlowski', '284157192', '1', 'admin', 1);

INSERT INTO Employee(ID, FIRST_NAME, LAST_NAME, PESEL, ID_NUMBER, PASSWORD, BRANCH_ID)
VALUES(nextval('manager_sequence'), 'Wojtek', 'Waldon', '384157192', '2', 'admin', 1);

CREATE OR REPLACE PROCEDURE change_manager_firstName(manager_id IN VARCHAR, firstName IN VARCHAR)
BEGIN
UPDATE MANAGER 
 SET FIRST_NAME = firstName
 WHERE ID_NUMBER = manager_id;
END; 

CREATE OR REPLACE PROCEDURE change_manager_lastName(manager_id IN VARCHAR, lastName IN VARCHAR)
BEGIN
UPDATE MANAGER 
 SET LAST_NAME = lastName
 WHERE ID_NUMBER = manager_id;
END; 


CREATE OR REPLACE PROCEDURE change_manager_password(manager_id IN VARCHAR, manager_password IN VARCHAR)
BEGIN
UPDATE MANAGER 
 SET PASSWORD = manager_password
 WHERE ID_NUMBER = manager_id;
END; 

CREATE OR REPLACE PROCEDURE create_employee(firstName IN VARCHAR,lastName IN VARCHAR, e_pesel IN VARCHAR, idNumber IN VARCHAR, employee_password IN VARCHAR, branchID IN NUMERIC)
BEGIN
    INSERT INTO EMPLOYEE(ID, FIRST_NAME, LAST_NAME, PESEL, ID_NUMBER, PASSWORD, BRANCH_ID)
    VALUES(nextval('employee_sequence'), firstName, lastName, e_pesel, idNumber, employee_password, branchID);
END; 

CREATE OR REPLACE PROCEDURE create_customer(firstName IN VARCHAR,lastName IN VARCHAR, e_pesel IN VARCHAR, idNumber IN VARCHAR)
BEGIN
    INSERT INTO CUSTOMER(ID, FIRST_NAME, LAST_NAME, PESEL, ID_NUMBER)
    VALUES(nextval('customer_sequence'), firstName, lastName, e_pesel, idNumber);
END; 

CREATE OR REPLACE PROCEDURE create_customer_account(customerID IN NUMERIC)
BEGIN
    INSERT INTO CUSTOMER_ACCOUNT(ID, BONUS_POINTS, CUSTOMER_ID)
    VALUES(nextval('customer_account_sequence'), 0, customerID);
END; 

CREATE OR REPLACE PROCEDURE create_transaction(t_date IN DATE, custACCID IN NUMERIC, employeeID IN NUMERIC, t_cost IN NUMERIC, bonusPoints IN NUMERIC)
BEGIN
    INSERT INTO TRANSACTION(ID, CUSTMER_ACCOUNT_ID, EMPLOYEE_ID, DATE, COST, ADDED_BONUS_POINTS)
    VALUES(nextval('transaction_sequence'), custACCID, employeeID, t_date, t_cost, bonusPoints);
END;